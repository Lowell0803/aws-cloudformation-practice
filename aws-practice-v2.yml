AWSTemplateFormatVersion: 2010-09-09
Description: "This is a CloudFormation integration of API Gateway, Lambda, and DynamoDB"

Parameters:
  s3BucketName:
    Description: "Name of the S3 Bucket with Scripts"
    Type: String
    Default: "ylta-aws-practice-scripts"
  s3KeyName:
    Description: "Name of the S3 Bucket script file"
    Type: String
    Default: "lambda/fn-list-card.zip"
  listFunctionName:
    Description: "Name of the lambda list function"
    Type: String
    Default: "fnListFunctionPractice"
  listFunctionHandler:
    Description: "Handler of the lambda list function"
    Type: String
    Default: "fn-list-card.lambda_handler" # python-file.handler_name

Resources: 
  restApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: "This is the REST API"
      Name: "restApi" # Actual name in AWS

  listApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt restApi.RootResourceId # Required
      PathPart: "list" # Required
      RestApiId: !Ref restApi # Requiredresource

  registerApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt restApi.RootResourceId # Required
      PathPart: "register" # Required
      RestApiId: !Ref restApi # Requiredresource

  updateApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt restApi.RootResourceId # Required
      PathPart: "update" # Required
      RestApiId: !Ref restApi # Requiredresource

  listLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref s3BucketName
        S3Key: !Ref s3KeyName
      Description: "This is the lambda function for the List API."
      FunctionName: !Ref listFunctionName # Actual name of the fn in AWS
      Handler: !Ref listFunctionHandler
      Role: !GetAtt listLambdaFunctionRole.Arn # Required
      Runtime: "python3.12"
      Timeout: 60
  
  listLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Description: !Join ["", ["Role for ", !Ref listFunctionName]]
      Policies: 
        - PolicyName: !Join ["-", [!Ref listFunctionName, "execution-policy"]]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                Resource: 
                  - "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Join ["", ["arn:aws:logs:*:*:log-group:/aws/lambda/", !Ref listFunctionName, ":*"]]  
      RoleName: "fnListFunctionPracticeRole"